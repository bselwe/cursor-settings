[
    // Panels
    {
        // Requires mhutchie.git-graph extension
        "key": "cmd+k cmd+l",
        "command": "git-graph.view"
    },
    {
        "key": "cmd+k cmd+e",
        "command": "workbench.view.explorer"
    },
    {
        // Find (f) in files.
        "key": "cmd+k cmd+f",
        "command": "workbench.view.search"
    },
    {
        "key": "f3",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+f3",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "shift+f4",
        "command": "-search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    // Open source control and focus on the first change.
    {
        "key": "cmd+k cmd+g",
        "command": "extension.multiCommand.execute",
        "args": {
            "sequence": [
                "workbench.view.scm",
                "list.focusFirst",
                "list.focusDown",
                "list.focusDown",
                "list.focusDown"
            ],
        }
    },
    {
        "key": "cmd+k cmd+d",
        "command": "workbench.view.debug"
    },
    {
        "key": "cmd+k cmd+t",
        "command": "workbench.view.testing.focus"
    },
    {
        "key": "cmd+k cmd+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "cmd+k cmd+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+k cmd+p",
        "command": "workbench.action.problems.focus"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "workbench.debug.action.toggleRepl"
    },
    {
        // Opens shell
        "key": "cmd+k cmd+s",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "cmd+k cmd+z",
        "command": "workbench.action.toggleZenMode"
    },
    {
        "key": "cmd+e",
        "command": "workbench.action.focusActiveEditorGroup"
    },
    // Split panels
    // {
    //     "key": "ctrl+w",
    //     "command": "workbench.action.joinAllGroups",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+n",
    //     "command": "workbench.action.splitEditor",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+h",
    //     "command": "workbench.action.navigateLeft",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+shift+j",
    //     "command": "workbench.action.moveEditorToPreviousGroup",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+l",
    //     "command": "workbench.action.navigateRight",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+shift+k",
    //     "command": "workbench.action.moveEditorToNextGroup",
    //     "when": "editorFocus"
    // },
    // {
    //     "key": "ctrl+j",
    //     "command": "workbench.action.previousEditorInGroup",
    //     "when": "editorFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
    // },
    // {
    //     "key": "ctrl+k",
    //     "command": "workbench.action.nextEditorInGroup",
    //     "when": "editorFocus"
    // },
    {
        "key": "ctrl+w h",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+w j",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+w k",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.increaseViewSize",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.decreaseViewSize",
        "when": "editorFocus"
    },
    // Suggestion, code action windows, quick fix window, breadcrumbs window
    {
        "key": "ctrl+j",
        "command": "selectNextSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "selectPrevSuggestion",
        "when": "editorTextFocus && suggestWidgetMultipleSuggestions && suggestWidgetVisible"
    },
    {
        "key": "ctrl+j",
        "when": "codeActionMenuVisible",
        "command": "selectNextCodeAction"
    },
    {
        "key": "ctrl+k",
        "when": "codeActionMenuVisible",
        "command": "selectPrevCodeAction"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+h",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+l",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    }
    // Toggle font size (requires `rebornix.toggle` extension)
    {
        "key": "cmd+k cmd+k",
        "command": "toggle",
        "when": "editorTextFocus",
        "args": {
            "id": "fontSize",
            "value": [
                {
                    "editor.fontSize": 19,
                    "editor.lineHeight": 0,
                    "window.zoomLevel": 0.5,
                    "editor.lineNumbers": "relative"
                },
                {
                    "editor.fontSize": 16,
                    "editor.lineHeight": 0,
                    "window.zoomLevel": 0,
                    "editor.lineNumbers": "relative"
                },
                {
                    "editor.fontSize": 14,
                    "editor.lineHeight": 0,
                    "window.zoomLevel": 0,
                    "editor.lineNumbers": "relative"
                }
            ]
        }
    },
    // File explorer (you need to be in the file explorer focus to use these, `cmd+k cmd+e`)
    {
        // Requires `mrmlnc.vscode-duplicate` extension
        "key": "cmd+d",
        "command": "duplicate.execute",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "cmd+n",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "shift+cmd+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "cmd+r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "cmd+d",
        "command": "deleteFile",
        "when": "filesExplorerFocus && !inputFocus"
    }
    // Terminal (you need to be in the terminal focus to use these, `cmd+k cmd+s`)
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    // Multi cursor (`cmd+d`)
    {
        "key": "cmd+backspace",
        "command": "editor.action.moveSelectionToPreviousFindMatch",
        "when": "editorFocus && editorHasMultipleSelections"
    },
    {
        "key": "cmd+shift+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus && editorHasMultipleSelections"
    },
    {
        "key": "cmd+shift+i",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorFocus && editorHasSelection"
    },
    // Navigation and definitions
    {
        "key": "cmd+shift+c",
        "command": "workbench.files.action.collapseExplorerFolders"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack",
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.navigateForward",
        "when": "canNavigateForward",
    },
    {
        "key": "ctrl+space",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    // {
    //     "key": "cmd+]",
    //     "command": "editor.action.revealDefinition"
    // },
    // {
    //     "key": "cmd+shift+]",
    //     "command": "editor.action.peekDefinition"
    // },
    // {
    //     "key": "cmd+[",
    //     "command": "workbench.action.navigateBack"
    // },
    // {
    //     "key": "cmd+shift+[",
    //     "command": "workbench.action.navigateForward"
    // },
    // {
    //     "key": "cmd+shift+d",
    //     "command": "editor.action.showHover",
    //     "when": "editorTextFocus"
    // },
    {
        "key": "ctrl+shift+f",
        "command": "editor.action.selectToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+u",
        "command": "editor.action.pageUpHover",
        "when": "editorHoverFocused",
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.pageDownHover",
        "when": "editorHoverFocused",
    },
    {
        "key": "k",
        "command": "editor.action.scrollUpHover",
        "when": "editorHoverFocused",
    },
    {
        "key": "j",
        "command": "editor.action.scrollDownHover",
        "when": "editorHoverFocused",
    },
    // {
    //     "key": "cmd+k",
    //     "command": "cursormove",
    //     "args": {
    //         "to": "up",
    //         "by": "line",
    //         "value": 1
    //     },
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "cmd+j",
    //     "command": "cursorMove",
    //     "args": {
    //         "to": "down",
    //         "by": "line",
    //         "value": 1
    //     },
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "cmd+h",
    //     "command": "cursorMove",
    //     "args": {
    //         "to": "left",
    //         "by": "character",
    //         "value": 1
    //     },
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "cmd+l",
    //     "command": "cursorMove",
    //     "args": {
    //         "to": "right",
    //         "by": "character",
    //         "value": 1
    //     },
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "cmd+e",
    //     "command": "cursorWordEndRight",
    //     "when": "editorTextFocus"
    // },
    // {
    //     "key": "cmd+b",
    //     "command": "cursorWordLeft",
    //     "when": "editorTextFocus"
    // },
    // Git shortcuts (you need to be in the source control focus to use these, `cmd+k cmd+g`)
    // TODO: Fix git shortcuts.
    {
        "key": "cmd+s",
        "command": "git.stage",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "cmd+shift+s",
        "command": "git.stageAll",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "cmd+u",
        "command": "git.unstage",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "cmd+shift+u",
        "command": "git.unstageAll",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    },
    {
        "key": "cmd+d",
        "command": "git.clean",
        "when": "sideBarFocus && activeViewlet == 'workbench.view.scm'"
    },
    // Git shortcuts (you need to be in the text compare editor focus to use these)
    {
        "key": "ctrl+h",
        "command": "workbench.action.compareEditor.focusSecondarySide",
        "when": "textCompareEditorActive"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.compareEditor.focusPrimarySide",
        "when": "textCompareEditorActive"
    },
    // Running tests
    {
        "key": "cmd+t cmd+o",
        "command": "openTest",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t cmd+t",
        "command": "testing.reRunLastRun",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t cmd+s",
        "command": "testing.runAtCursor",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t cmd+f",
        "command": "testing.runCurrentFile",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t cmd+c",
        "command": "testing.cancelRun",
        "when": "editorFocus"
    },
    {
        "key": "cmd+t cmd+w",
        "command": "testing.clearTestResults",
        "when": "editorFocus"
    },
    {
        "key": "[IntlBackslash]",
        "command": "extension.relativeGoto",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+g",
        "command": "-extension.relativeGoto",
        "when": "editorTextFocus"
    },
    {
        "key": "[IntlBackslash]",
        "command": "relative-goto.select"
    },
    {
        "key": "cmd+s",
        "command": "-relative-goto.select"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    // Cursor AI
    {
        "key": "shift+cmd+e",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    }
]